[pixel shader]
uniform float2 a;

float4 main() : SV_TARGET
{
    int x = a.x;
    int y = a.y;
    return float4(x + y, x - y, x * y, x / y);
}

[test]
uniform 0 float4 5.0 16.0 0.0 0.0
todo(sm>=6) draw quad
probe all rgba (21.0, -11.0, 80.0, 0.0)

[pixel shader]
uniform float2 a;

float4 main() : SV_TARGET
{
    int x = a.x;
    int y = a.y;
    return float4(x % y, +x, -x, y / x);
}

[test]
uniform 0 float4 5.0 16.0 0.0 0.0
todo(sm>=6) draw quad
probe all rgba (5.0, 5.0, -5.0, 3.0)

[pixel shader]
uniform float2 a;

float4 main() : SV_TARGET
{
    int x = a.x;
    int y = a.y;
    return float4(x / y, -x / y, x / -y, -x / -y);
}

[test]
uniform 0 float4 42.0 5.0 0.0 0.0
todo(sm>=6) draw quad
probe all rgba (8.0, -8.0, -8.0, 8.0)

[pixel shader]
uniform float2 a;

float4 main() : SV_TARGET
{
    int x = a.x;
    int y = a.y;
    return float4(x % y, -x % y, x % -y, -x % -y);
}

[test]
uniform 0 float4 42.0 5.0 0.0 0.0
todo(sm>=6) draw quad
probe all rgba (2.0, -2.0, 2.0, -2.0)

[pixel shader]
uniform float2 a;

float4 main() : SV_TARGET
{
    int x = a.x;
    int y = a.y;
    return float4(x / y, -x / y, x / -y, -x / -y);
}

[test]
uniform 0 float4 45.0 5.0 0.0 0.0
todo(sm>=6) draw quad
probe all rgba (9.0, -9.0, -9.0, 9.0)

[pixel shader]
uniform float2 a;

float4 main() : SV_TARGET
{
    int x = a.x;
    int y = a.y;
    return float4(x % y, -x % y, x % -y, -x % -y);
}

[test]
uniform 0 float4 45.0 5.0 0.0 0.0
todo(sm>=6) draw quad
probe all rgba (0.0, 0.0, 0.0, 0.0)

[pixel shader]
uniform float4 a;

float4 main() : SV_TARGET
{
    return abs(int4(a));
}

[test]
uniform 0 float4 5.0 -7.0 0.0 -10.0
todo(sm>=6) draw quad
probe all rgba (5.0, 7.0, 0.0, 10.0)

[pixel shader]
uniform float4 a;
uniform float4 b;

float4 main() : sv_target
{
    int2 x = a.xz;
    int2 y = a.yw;
    int2 z = b.xy;
    int2 w = b.zw;
    return float4(x / y, z % w);
}

[test]
uniform 0 float4 45.0 5.0 50.0 10.0
uniform 4 float4 3.0 8.0 2.0 5.0
todo(sm>=6) draw quad
probe all rgba (9.0, 5.0, 1.0, 3.0)
